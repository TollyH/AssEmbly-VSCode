{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "AssEmbly",
	"patterns": [
		{
			"include": "#keywords"
		},
		{
			"include": "#literals"
		},
		{
			"include": "#labels"
		},
		{
			"include": "#registers"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#comments"
		}
	],
	"repository": {
		"keywords": {
			"patterns": [
				{
					"name": "meta.preprocessor.assembler.mnemonic.assembly-tolly",
					"match": "(?i)^(PAD|DAT|NUM|IMP|MAC|ANALYZER)(?= |;|$)"
				},
				{
					"name": "keyword.control.operation.mnemonic.assembly-tolly",
					"match": "(?i)^(HLT|NOP|JMP|JEQ|JZO|JNE|JNZ|JLT|JCA|JLE|JGT|JGE|JNC|ADD|ICR|SUB|DCR|MUL|DIV|DVR|REM|SHL|SHR|AND|ORR|XOR|NOT|RNG|TST|CMP|MVB|MVW|MVD|MVQ|PSH|POP|CAL|RET|WCN|WCB|WCX|WCC|WFN|WFB|WFX|WFC|OFL|CFL|DFL|FEX|FSZ|RCC|RFC|SIGN_JLT|SIGN_JLE|SIGN_JGT|SIGN_JGE|SIGN_JSI|SIGN_JNS|SIGN_JOV|SIGN_JNO|SIGN_DIV|SIGN_DVR|SIGN_REM|SIGN_SHR|SIGN_MVB|SIGN_MVW|SIGN_MVD|SIGN_WCN|SIGN_WCB|SIGN_WFN|SIGN_WFB|SIGN_EXB|SIGN_EXW|SIGN_EXD|SIGN_NEG|FLPT_ADD|FLPT_SUB|FLPT_MUL|FLPT_DIV|FLPT_DVR|FLPT_REM|FLPT_SIN|FLPT_ASN|FLPT_COS|FLPT_ACS|FLPT_TAN|FLPT_ATN|FLPT_PTN|FLPT_POW|FLPT_LOG|FLPT_WCN|FLPT_WFN|FLPT_EXH|FLPT_EXS|FLPT_SHS|FLPT_SHH|FLPT_NEG|FLPT_UTF|FLPT_STF|FLPT_FTS|FLPT_FCS|FLPT_FFS|FLPT_FNS|FLPT_CMP|EXTD_BSW)(?= |;|$)"
				}
			]
		},
		"literals": {
			"patterns": [
				{
					"name": "constant.numeric.literal.binary.assembly-tolly",
					"match": "(?i)(?<=\\s|,)0b[0-1][0-1_]*?(?=\\s|,|$|;)"
				},
				{
					"name": "constant.numeric.literal.decimal.assembly-tolly",
					"match": "(?<=\\s|,)[\\-0-9.][0-9_.]*?(?=\\s|,|$|;)"
				},
				{
					"name": "constant.numeric.literal.hexadecimal.assembly-tolly",
					"match": "(?i)(?<=\\s|,)0x[0-9a-f][0-9a-f_]*?(?=\\s|,|$|;)"
				}
			]
		},
		"labels": {
			"patterns": [
				{
					"name": "entity.name.class.label.address.literal.assembly-tolly",
					"match": "(?<!^)(?<=\\s|,):&[A-Za-z_][A-Za-z0-9_]*(?=\\s|,|$|;)"
				},
				{
					"name": "variable.name.label.reference.assembly-tolly",
					"match": "(?<!^)(?<=\\s|,):[A-Za-z_][A-Za-z0-9_]*?(?=\\s|,|$|;)"
				},
				{
					"name": "entity.name.tag.label.definition.assembly-tolly",
					"match": "^:[A-Za-z_][A-Za-z0-9_]*(?:;|$|\\s)"
				}
			]
		},
		"registers": {
			"patterns": [
				{
					"name": "entity.name.class.register.pointer.assembly-tolly",
					"match": "(?i)(?<!^)(?<=\\s|,)\\*(?:rpo|rso|rsb|rsf|rrv|rfp|rg0|rg1|rg2|rg3|rg4|rg5|rg6|rg7|rg8|rg9)(?=\\s|,|$|;)"
				},
				{
					"name": "entity.name.function.register.assembly-tolly",
					"match": "(?i)(?<!^)(?<=\\s|,)(?:rpo|rso|rsb|rsf|rrv|rfp|rg0|rg1|rg2|rg3|rg4|rg5|rg6|rg7|rg8|rg9)(?=\\s|,|$|;)"
				}
			]
		},
		"strings": {
			"name": "string.quoted.double.literal.assembly-tolly",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.assembly-tolly",
					"match": "\\\\(\"|'|\\\\|0|a|b|f|n|r|t|v|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})"
				}
			]
		},
		"comments": {
			"name": "comment.line.assembly-tolly",
			"match": ";.*"
		}
	},
	"scopeName": "source.assembly-tolly"
}